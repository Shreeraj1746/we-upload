name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=we-upload/terraform.tfstate" -backend-config="region=us-east-1"
        working-directory: ./terraform/environments/dev

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="image_tag=${{ github.sha }}"
        working-directory: ./terraform/environments/dev

      - name: Get API Endpoint
        id: get-api-endpoint
        run: |
          API_ENDPOINT=$(terraform output -raw api_endpoint)
          echo "API_ENDPOINT=${API_ENDPOINT}" >> $GITHUB_OUTPUT
        working-directory: ./terraform/environments/dev

      - name: Update Deployment Status
        uses: actions/github-script@v6
        with:
          script: |
            const endpoint = "${{ steps.get-api-endpoint.outputs.API_ENDPOINT }}";
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              target_url: endpoint,
              description: 'Deployment completed successfully',
              context: 'Terraform/Apply'
            });
