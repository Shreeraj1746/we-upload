[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "we-upload"
version = "0.1.0"
description = "Multi-User File Upload & Sharing Backend with FastAPI"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "We-Upload Team"}
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.23.2",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "pydantic>=2.4.2",
    "pydantic-settings>=2.0.3",
    "psycopg2-binary>=2.9.9",
    "python-multipart>=0.0.6",
    "boto3>=1.28.62",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.3",
    "mypy>=1.6.1",
    "black>=23.10.1",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
    "moto>=4.2.5",
]

[tool.setuptools]
packages = ["app"]

[tool.ruff]
target-version = "py39"
line-length = 100

[tool.ruff.lint]
# Enable all rules by default, then selectively disable
select = ["ALL"]
ignore = [
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "FIX002",  # line-contains-todo
    "TD002",  # missing-todo-author
    "TD003",  # missing-todo-link
    "PLR2004",  # magic-value-comparison
    # Adding FastAPI-specific exceptions and other temporary exceptions
    "B008",  # Do not perform function call in argument defaults (needed for FastAPI)
    "B904",  # Use 'raise ... from err' (too many instances to fix at once)
    "RET504", # Unnecessary variable assignment before return
    "RET505", # Unnecessary elif after return
    "RET506", # Unnecessary elif after raise
    "ARG001", # Unused function argument (needed for route handlers)
    "SIM108", # Use ternary operator instead of if-else block
    "A002",   # Argument shadowing a Python builtin
    "A003",   # Class attribute shadowing a Python builtin
    "ANN204", # Missing return type for __init__
    "ANN401", # Dynamically typed expressions (Any)
    "BLE001", # Do not catch blind exception
    "DTZ003", # Use datetime.now with timezone instead of utcnow
    "E501",   # Line too long
    "EM101",  # String literal in exception
    "EM102",  # f-string in exception
    "FA100",  # Missing from __future__ import annotations
    "G004",   # Logging with f-string
    "PGH003", # Use specific rule codes for ignoring type issues
    "PGH004", # Use specific rule codes when using noqa
    "RUF012", # Mutable class attributes
    "S104",   # Possible binding to all interfaces
    "T201",   # Print found
    "TRY002", # Create custom exceptions
    "TRY003", # Avoid long messages outside exception class
    "TRY200", # Use raise from
    "TRY300", # Consider moving to else block
    "TRY400", # Use logging.exception
    "UP007",  # Use X | Y for Union types in Python 3.10+
    "UP038",  # Use X | Y in isinstance
    # Formatter conflict rules
    "COM812", # Missing trailing comma
    "ISC001", # Implicit string concatenation
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",  # Use of assert detected
    "PLR0913",  # Too many arguments to function call
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
known-first-party = ["app"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = false  # Temporarily disable any-return warnings
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true  # Add global ignore for missing imports

[[tool.mypy.overrides]]
module = ["alembic.*", "boto3.*", "botocore.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = "--cov=app"
